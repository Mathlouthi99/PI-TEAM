{% extends 'baseFront.html.twig' %}
{% block title %}
    Blogs
{% endblock %}
{% block body %}

    <link rel="stylesheet" href="{{ asset('bundles/mercuryseriesflashy/css/flashy.css') }}">
    <script src="//code.jquery.com/jquery.js"></script>
    <script src="{{ asset('bundles/mercuryseriesflashy/js/flashy.js') }}"></script>
    <link href="//fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href='//fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700' rel='stylesheet'>

    <style>
        /* Set the size of the div element that contains the map */
        #map {
            height: 400px;
            /* The height is 400 pixels */
            width: 100%;
            /* The width is the width of the web page */
        }

    </style>
    <link href="//fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link href='//fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700' rel='stylesheet'>
    <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css'>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <!------ Include the above in your HEAD tag ---------->

    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <style>
        body {font-family: Arial, Helvetica, sans-serif;}
        * {box-sizing: border-box;}

        /* Button used to open the contact form - fixed at the bottom of the page */
        .open-button {
            background-color: #555;
            color: white;
            padding: 16px 20px;
            border: none;
            cursor: pointer;
            opacity: 0.8;
            position: fixed;
            bottom: 23px;
            right: 28px;
            width: 280px;
        }

        /* The popup form - hidden by default */
        .form-popup {
            display: none;
            position: fixed;
            bottom: 0;
            right: 15px;
            border: 3px solid #f1f1f1;
            z-index: 9;
        }

        /* Add styles to the form container */
        .form-container {
            max-width: 300px;
            padding: 10px;
            background-color: white;
        }

        /* Full-width input fields */
        .form-container input[type=text], .form-container input[type=password] {
            width: 100%;
            padding: 15px;
            margin: 5px 0 22px 0;
            border: none;
            background: #f1f1f1;
        }

        /* When the inputs get focus, do something */
        .form-container input[type=text]:focus, .form-container input[type=password]:focus {
            background-color: #ddd;
            outline: none;
        }

        /* Set a style for the submit/login button */
        .form-container .btn {
            background-color: #04AA6D;
            color: white;
            padding: 16px 20px;
            border: none;
            cursor: pointer;
            width: 100%;
            margin-bottom:10px;
            opacity: 0.8;
        }

        /* Add a red background color to the cancel button */
        .form-container .cancel {
            background-color: red;
        }

        /* Add some hover effects to buttons */
        .form-container .btn:hover, .open-button:hover {
            opacity: 1;
        }
    </style>

    <style>
        /*!
         * bootstrap-star-rating v4.0.2
         * http://plugins.krajee.com/star-rating
         *
         * Author: Kartik Visweswaran
         * Copyright: 2013 - 2017, Kartik Visweswaran, Krajee.com
         *
         * Licensed under the BSD 3-Clause
         * https://github.com/kartik-v/bootstrap-star-rating/blob/master/LICENSE.md
         */.rating-loading{width:25px;height:25px;font-size:0;color:#fff;background:url(../img/loading.gif) top left no-repeat;border:none}.rating-container .rating-stars{position:relative;cursor:pointer;vertical-align:middle;display:inline-block;overflow:hidden;white-space:nowrap}.rating-container .rating-input{position:absolute;cursor:pointer;width:100%;height:1px;bottom:0;left:0;font-size:1px;border:none;background:0 0;padding:0;margin:0}.rating-disabled .rating-input,.rating-disabled .rating-stars{cursor:not-allowed}.rating-container .star{display:inline-block;margin:0 3px;text-align:center}.rating-container .empty-stars{color:#aaa}.rating-container .filled-stars{position:absolute;left:0;top:0;margin:auto;color:#fde16d;white-space:nowrap;overflow:hidden;-webkit-text-stroke:1px #777;text-shadow:1px 1px #999}.rating-rtl{float:right}.rating-animate .filled-stars{transition:width .25s ease;-o-transition:width .25s ease;-moz-transition:width .25s ease;-webkit-transition:width .25s ease}.rating-rtl .filled-stars{left:auto;right:0;-moz-transform:matrix(-1,0,0,1,0,0) translate3d(0,0,0);-webkit-transform:matrix(-1,0,0,1,0,0) translate3d(0,0,0);-o-transform:matrix(-1,0,0,1,0,0) translate3d(0,0,0);transform:matrix(-1,0,0,1,0,0) translate3d(0,0,0)}.rating-rtl.is-star .filled-stars{right:.06em}.rating-rtl.is-heart .empty-stars{margin-right:.07em}.rating-lg{font-size:3.91em}.rating-md{font-size:3.13em}.rating-sm{font-size:2.5em}.rating-xs{font-size:2em}.rating-xl{font-size:4.89em}.rating-container .clear-rating{color:#aaa;cursor:not-allowed;display:inline-block;vertical-align:middle;font-size:60%;padding-right:5px}.clear-rating-active{cursor:pointer!important}.clear-rating-active:hover{color:#843534}.rating-container .caption{color:#999;display:inline-block;vertical-align:middle;font-size:60%;margin-top:-.6em;margin-left:5px;margin-right:0}.rating-rtl .caption{margin-right:5px;margin-left:0}@media print{.rating-container .clear-rating{display:none}}

    </style>
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
        <meta name="description" content="" />
        <meta name="author" content="" />
        <title>Blog Home - Start Bootstrap Template</title>
        <!-- Favicon-->
        <link rel="icon" type="image/x-icon" href="assets/favicon.ico" />
        <!-- Core theme CSS (includes Bootstrap)-->
        <link href="css/styles.css" rel="stylesheet" />
    </head>
    <body>

    <!-- Page header with logo and tagline-->
    <header class="py-5 bg-light border-bottom mb-4">

        <a href="#!"><img src="{{ asset('front/images/cov1.jpg') }}" width="100%" alt="..." /></a>
        <p class="lead mb-0"></p>


    </header>
    <!-- Page content-->
    <div class="container">
        <div class="row">
            <!-- Blog entries-->
            <div class="col-lg-8">
                <!-- Featured blog post-->
                <div class="card mb-4">
                    <a href="#!"><img class="card-img-top" src="{{ asset('front/images/listeBlog.jpg') }}" alt="..." /></a>
                    <div class="card-body">
                        <div class="small text-muted">Mars 8, 2022</div>
                        <h2 class="card-title">Liste des blogs </h2>
                        <p class="card-text">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Reiciendis aliquid atque, nulla? Quos cum ex quis soluta, a laboriosam. Dicta expedita corporis animi vero voluptate voluptatibus possimus, veniam magni quis!</p>
                        <a class="btn btn-primary" href="{{ path('addBlog')}}">Ajouter Votre Blog →</a>
                    </div>
                </div>
                <!-- Nested row for non-featured blog posts-->
                <tbody  id="list">
                <div class="row" id="list">
                    {% for posts in posts |slice(0,15) %}
                        {% if loop.index == 1 or loop.index == 3 or loop.index == 5  %}
                            <tr>
                            <div class="col-lg-6">
                                <!-- Blog post-->
                                <div class="card mb-4">
                                    <a href="#!"><img class="card-img-top" src="{{ asset('uploads/blog/' ~ posts.photo) }}" alt="..." /></a>
                                    <div class="card-body">
                                        <div class="small text-muted">Mars 8, 2022</div>
                                        <h2 class="card-title h4">{{ posts.titre}}</h2>
                                        <p class="card-text">{{ posts.description|trim }}</p>
                                        <a class="btn btn-primary" href="{{ path('showdetailed',{'id': posts.id}) }}">Afficher Plus →</a>

                                        <div id="fb-root"></div>
                                        <script async defer crossorigin="anonymous" src="https://connect.facebook.net/fr_FR/sdk.js#xfbml=1&version=v13.0" nonce="sxx1xPEq"></script>
                                        <div class="fb-share-button" data-href="" data-layout="button_count" data-size="small"><a target="_blank" src=sdkpreparse" class="fb-xfbml-parse-ignore">Partager</a></div>
                                    </div>
                                    <style> margin-top:3px;</style>
                                    <input id="input-1" name="input-1" class="rating rating-loading" data-ref="{{posts.id}}"  data-min="0"data-max="5" data-step="0.1">
                                </div>
                                <!-- Blog post-->
                            </div>
                        {% elseif loop.index == 2 or loop.index == 4 or loop.index == 6  %}
                            <div class="col-lg-6">
                                <!-- Blog post-->
                                <div class="card mb-4">
                                    <a href="#!"><img class="card-img-top" src="{{ asset('uploads/blog/' ~ posts.photo) }}" alt="..." /></a>
                                    <div class="card-body">
                                        <div class="small text-muted">Mars 8, 2022</div>
                                        <h2 class="card-title h4">{{ posts.titre}}</h2>
                                        <p class="card-text">{{ posts.description|trim }}</p>
                                        <a class="btn btn-primary"  href="{{ path('showdetailed',{'id': posts.id}) }}">Afficher plus →</a>

                                        <div id="fb-root"></div>
                                        <script async defer crossorigin="anonymous" src="https://connect.facebook.net/fr_FR/sdk.js#xfbml=1&version=v13.0" nonce="sxx1xPEq"></script>
                                        <div class="fb-share-button" data-href="" data-layout="button_count" data-size="small"><a target="_blank" src=sdkpreparse" class="fb-xfbml-parse-ignore">Partager</a></div>
                                    </div>
                                    <style> margin-top:3px;</style>
                                    <input id="input-1" name="input-1" class="rating rating-loading" data-ref="{{posts.id}}"  data-min="0"data-max="5" data-step="0.1">

                                </div>

                            </div>
                            </tr>
                        {% endif %}
                    {% endfor %}
                </div>

                <!-- Pagination-->
            </div>
            <!-- Side widgets-->
            <div class="col-lg-4">
                <!-- Search widget-->
                <div class="card mb-4">
                    <div class="card-header">Search</div>
                    <div class="card-body">
                        <div class="input-group">
                            <input id="button-search" class="form-control" type="text" placeholder="Chercher blog" aria-label="Enter mot a chercher ..." aria-describedby="button-search" />
                            <button class="btn btn-primary"  style="margin-left: 70%;
    margin-top: 20px" type="button">Chercher</button>
                        </div>
                    </div>
                </div>
                <!-- Categories widget-->
                <!-- Side widget-->

                <div class="card mb-4">
                    <div class="card-header">Avez Vous un probléme ? Passer Maintenant Votre Reclamation !</div>
                    <button class="btn btn-primary" onclick="openForm()">Reclamation !</button>
                    <div class="form-popup" id="myForm">
                        <form action="addReclamation" class="form-container">
                            <h1> N'hesitez pas a nous laisser votre Reclamation  </h1>

                            <label for="email" id="email"><b>Email</b></label>
                            <input id="email" type="text" placeholder="Entre vote Email" name="email"  required>

                            <label id="description" for="description"><b>Message</b></label>
                            <input  id="description" name="description" type="text" placeholder="Tappez votre message" name="description" >

                            <button type="submit" class="btn">Envoyer</button>
                            <button type="button" class="btn cancel" onclick="closeForm()">Annuler</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Core theme JS-->
    <script src="js/scripts.js"></script>
    <script>
        function openForm() {
            document.getElementById("myForm").style.display = "block";
        }

        function closeForm() {
            document.getElementById("myForm").style.display = "none";
        }
    </script>

    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <script>
        /*!
        * bootstrap-star-rating v4.0.2
        * http://plugins.krajee.com/star-rating
        *
        * Author: Kartik Visweswaran
        * Copyright: 2013 - 2017, Kartik Visweswaran, Krajee.com
        *
        * Licensed under the BSD 3-Clause
        * https://github.com/kartik-v/bootstrap-star-rating/blob/master/LICENSE.md
        */
        ! function(e) {
            "use strict";
            "function" == typeof define && define.amd ? define(["jquery"], e) : "object" == typeof module && module.exports ? module.exports = e(require("jquery")) : e(window.jQuery)
        }(function(e) {
            "use strict";
            e.fn.ratingLocales = {}, e.fn.ratingThemes = {};
            var t, a;
            t = {
                NAMESPACE: ".rating",
                DEFAULT_MIN: 0,
                DEFAULT_MAX: 5,
                DEFAULT_STEP: .5,
                isEmpty: function(t, a) {
                    return null === t || void 0 === t || 0 === t.length || a && "" === e.trim(t)
                },
                getCss: function(e, t) {
                    return e ? " " + t : ""
                },
                addCss: function(e, t) {
                    e.removeClass(t).addClass(t)
                },
                getDecimalPlaces: function(e) {
                    var t = ("" + e).match(/(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/);
                    return t ? Math.max(0, (t[1] ? t[1].length : 0) - (t[2] ? +t[2] : 0)) : 0
                },
                applyPrecision: function(e, t) {
                    return parseFloat(e.toFixed(t))
                },
                handler: function(e, a, n, r, i) {
                    var l = i ? a : a.split(" ").join(t.NAMESPACE + " ") + t.NAMESPACE;
                    r || e.off(l), e.on(l, n)
                }
            }, a = function(t, a) {
                var n = this;
                n.$element = e(t), n._init(a)
            }, a.prototype = {
                constructor: a,
                _parseAttr: function(e, a) {
                    var n, r, i, l, s = this,
                        o = s.$element,
                        c = o.attr("type");
                    if ("range" === c || "number" === c) {
                        switch (r = a[e] || o.data(e) || o.attr(e), e) {
                            case "min":
                                i = t.DEFAULT_MIN;
                                break;
                            case "max":
                                i = t.DEFAULT_MAX;
                                break;
                            default:
                                i = t.DEFAULT_STEP
                        }
                        n = t.isEmpty(r) ? i : r, l = parseFloat(n)
                    } else l = parseFloat(a[e]);
                    return isNaN(l) ? i : l
                },
                _parseValue: function(e) {
                    var t = this,
                        a = parseFloat(e);
                    return isNaN(a) && (a = t.clearValue), !t.zeroAsNull || 0 !== a && "0" !== a ? a : null
                },
                _setDefault: function(e, a) {
                    var n = this;
                    t.isEmpty(n[e]) && (n[e] = a)
                },
                _initSlider: function(e) {
                    var a = this,
                        n = a.$element.val();
                    a.initialValue = t.isEmpty(n) ? 0 : n, a._setDefault("min", a._parseAttr("min", e)), a._setDefault("max", a._parseAttr("max", e)), a._setDefault("step", a._parseAttr("step", e)), (isNaN(a.min) || t.isEmpty(a.min)) && (a.min = t.DEFAULT_MIN), (isNaN(a.max) || t.isEmpty(a.max)) && (a.max = t.DEFAULT_MAX), (isNaN(a.step) || t.isEmpty(a.step) || 0 === a.step) && (a.step = t.DEFAULT_STEP), a.diff = a.max - a.min
                },
                _initHighlight: function(e) {
                    var t, a = this,
                        n = a._getCaption();
                    e || (e = a.$element.val()), t = a.getWidthFromValue(e) + "%", a.$filledStars.width(t), a.cache = {
                        caption: n,
                        width: t,
                        val: e
                    }
                },
                _getContainerCss: function() {
                    var e = this;
                    return "rating-container" + t.getCss(e.theme, "theme-" + e.theme) + t.getCss(e.rtl, "rating-rtl") + t.getCss(e.size, "rating-" + e.size) + t.getCss(e.animate, "rating-animate") + t.getCss(e.disabled || e.readonly, "rating-disabled") + t.getCss(e.containerClass, e.containerClass)
                },
                _checkDisabled: function() {
                    var e = this,
                        t = e.$element,
                        a = e.options;
                    e.disabled = void 0 === a.disabled ? t.attr("disabled") || !1 : a.disabled, e.readonly = void 0 === a.readonly ? t.attr("readonly") || !1 : a.readonly, e.inactive = e.disabled || e.readonly, t.attr({
                        disabled: e.disabled,
                        readonly: e.readonly
                    })
                },
                _addContent: function(e, t) {
                    var a = this,
                        n = a.$container,
                        r = "clear" === e;
                    return a.rtl ? r ? n.append(t) : n.prepend(t) : r ? n.prepend(t) : n.append(t)
                },
                _generateRating: function() {
                    var a, n, r, i = this,
                        l = i.$element;
                    n = i.$container = e(document.createElement("div")).insertBefore(l), t.addCss(n, i._getContainerCss()), i.$rating = a = e(document.createElement("div")).attr("class", "rating-stars").appendTo(n).append(i._getStars("empty")).append(i._getStars("filled")), i.$emptyStars = a.find(".empty-stars"), i.$filledStars = a.find(".filled-stars"), i._renderCaption(), i._renderClear(), i._initHighlight(), n.append(l), i.rtl && (r = Math.max(i.$emptyStars.outerWidth(), i.$filledStars.outerWidth()), i.$emptyStars.width(r)), l.appendTo(a)
                },
                _getCaption: function() {
                    var e = this;
                    return e.$caption && e.$caption.length ? e.$caption.html() : e.defaultCaption
                },
                _setCaption: function(e) {
                    var t = this;
                    t.$caption && t.$caption.length && t.$caption.html(e)
                },
                _renderCaption: function() {
                    var a, n = this,
                        r = n.$element.val(),
                        i = n.captionElement ? e(n.captionElement) : "";
                    if (n.showCaption) {
                        if (a = n.fetchCaption(r), i && i.length) return t.addCss(i, "caption"), i.html(a), void(n.$caption = i);
                        n._addContent("caption", '<div class="caption">' + a + "</div>"), n.$caption = n.$container.find(".caption")
                    }
                },
                _renderClear: function() {
                    var a, n = this,
                        r = n.clearElement ? e(n.clearElement) : "";
                    if (n.showClear) {
                        if (a = n._getClearClass(), r.length) return t.addCss(r, a), r.attr({
                            title: n.clearButtonTitle
                        }).html(n.clearButton), void(n.$clear = r);
                        n._addContent("clear", '<div class="' + a + '" title="' + n.clearButtonTitle + '">' + n.clearButton + "</div>"), n.$clear = n.$container.find("." + n.clearButtonBaseClass)
                    }
                },
                _getClearClass: function() {
                    var e = this;
                    return e.clearButtonBaseClass + " " + (e.inactive ? "" : e.clearButtonActiveClass)
                },
                _toggleHover: function(e) {
                    var t, a, n, r = this;
                    e && (r.hoverChangeStars && (t = r.getWidthFromValue(r.clearValue), a = e.val <= r.clearValue ? t + "%" : e.width, r.$filledStars.css("width", a)), r.hoverChangeCaption && (n = e.val <= r.clearValue ? r.fetchCaption(r.clearValue) : e.caption, n && r._setCaption(n + "")))
                },
                _init: function(t) {
                    var a, n = this,
                        r = n.$element.addClass("rating-input");
                    return n.options = t, e.each(t, function(e, t) {
                        n[e] = t
                    }), (n.rtl || "rtl" === r.attr("dir")) && (n.rtl = !0, r.attr("dir", "rtl")), n.starClicked = !1, n.clearClicked = !1, n._initSlider(t), n._checkDisabled(), n.displayOnly && (n.inactive = !0, n.showClear = !1, n.showCaption = !1), n._generateRating(), n._initEvents(), n._listen(), a = n._parseValue(r.val()), r.val(a), r.removeClass("rating-loading")
                },
                _initEvents: function() {
                    var e = this;
                    e.events = {
                        _getTouchPosition: function(a) {
                            var n = t.isEmpty(a.pageX) ? a.originalEvent.touches[0].pageX : a.pageX;
                            return n - e.$rating.offset().left
                        },
                        _listenClick: function(e, t) {
                            return e.stopPropagation(), e.preventDefault(), e.handled === !0 ? !1 : (t(e), void(e.handled = !0))
                        },
                        _noMouseAction: function(t) {
                            return !e.hoverEnabled || e.inactive || t && t.isDefaultPrevented()
                        },
                        initTouch: function(a) {
                            var n, r, i, l, s, o, c, u, d = e.clearValue || 0,
                                p = "ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch;
                            p && !e.inactive && (n = a.originalEvent, r = t.isEmpty(n.touches) ? n.changedTouches : n.touches, i = e.events._getTouchPosition(r[0]), "touchend" === a.type ? (e._setStars(i), u = [e.$element.val(), e._getCaption()], e.$element.trigger("change").trigger("rating.change", u), e.starClicked = !0) : (l = e.calculate(i), s = l.val <= d ? e.fetchCaption(d) : l.caption, o = e.getWidthFromValue(d), c = l.val <= d ? o + "%" : l.width, e._setCaption(s), e.$filledStars.css("width", c)))
                        },
                        starClick: function(t) {
                            var a, n;

                            e.events._listenClick(t, function(t) {
                                return e.inactive ? !1 : (a = e.events._getTouchPosition(t), e._setStars(a), n = [e.$element.val(), e._getCaption()], e.$element.trigger("change").trigger("rating.change", n), void(e.starClicked = !0))
                            })
                            $.ajax({
                                url : "{{path('addrating')}}",
                                method: "GET",
                                data: {
                                    'ref' : e.$element.data('ref'),
                                    'rating':e.$element.val()
                                }

                            });

                        },
                        clearClick: function(t) {
                            e.events._listenClick(t, function() {
                                e.inactive || (e.clear(), e.clearClicked = !0)
                            })
                        },
                        starMouseMove: function(t) {
                            var a, n;
                            e.events._noMouseAction(t) || (e.starClicked = !1, a = e.events._getTouchPosition(t), n = e.calculate(a), e._toggleHover(n), e.$element.trigger("rating.hover", [n.val, n.caption, "stars"]))
                        },
                        starMouseLeave: function(t) {
                            var a;
                            e.events._noMouseAction(t) || e.starClicked || (a = e.cache, e._toggleHover(a), e.$element.trigger("rating.hoverleave", ["stars"]))
                        },
                        clearMouseMove: function(t) {
                            var a, n, r, i;
                            !e.events._noMouseAction(t) && e.hoverOnClear && (e.clearClicked = !1, a = '<span class="' + e.clearCaptionClass + '">' + e.clearCaption + "</span>", n = e.clearValue, r = e.getWidthFromValue(n) || 0, i = {
                                caption: a,
                                width: r,
                                val: n
                            }, e._toggleHover(i), e.$element.trigger("rating.hover", [n, a, "clear"]))
                        },
                        clearMouseLeave: function(t) {
                            var a;
                            e.events._noMouseAction(t) || e.clearClicked || !e.hoverOnClear || (a = e.cache, e._toggleHover(a), e.$element.trigger("rating.hoverleave", ["clear"]))
                        },
                        resetForm: function(t) {
                            t && t.isDefaultPrevented() || e.inactive || e.reset()
                        }
                    }
                },
                _listen: function() {
                    var a = this,
                        n = a.$element,
                        r = n.closest("form"),
                        i = a.$rating,
                        l = a.$clear,
                        s = a.events;
                    return t.handler(i, "touchstart touchmove touchend", e.proxy(s.initTouch, a)), t.handler(i, "click touchstart", e.proxy(s.starClick, a)), t.handler(i, "mousemove", e.proxy(s.starMouseMove, a)), t.handler(i, "mouseleave", e.proxy(s.starMouseLeave, a)), a.showClear && l.length && (t.handler(l, "click touchstart", e.proxy(s.clearClick, a)), t.handler(l, "mousemove", e.proxy(s.clearMouseMove, a)), t.handler(l, "mouseleave", e.proxy(s.clearMouseLeave, a))), r.length && t.handler(r, "reset", e.proxy(s.resetForm, a), !0), n
                },
                _getStars: function(e) {
                    var t, a = this,
                        n = '<span class="' + e + '-stars">';
                    for (t = 1; t <= a.stars; t++) n += '<span class="star">' + a[e + "Star"] + "</span>";
                    return n + "</span>"
                },
                _setStars: function(e) {
                    var t = this,
                        a = arguments.length ? t.calculate(e) : t.calculate(),
                        n = t.$element,
                        r = t._parseValue(a.val);

                    return n.val(r), t.$filledStars.css("width", a.width), t._setCaption(a.caption), t.cache = a, n
                },
                showStars: function(e) {
                    var t = this,
                        a = t._parseValue(e);
                    return t.$element.val(a), t._setStars()
                },
                calculate: function(e) {
                    var a = this,
                        n = t.isEmpty(a.$element.val()) ? 0 : a.$element.val(),
                        r = arguments.length ? a.getValueFromPosition(e) : n,
                        i = a.fetchCaption(r),
                        l = a.getWidthFromValue(r);
                    return l += "%", {
                        caption: i,
                        width: l,
                        val: r
                    }
                },
                getValueFromPosition: function(e) {
                    var a, n, r = this,
                        i = t.getDecimalPlaces(r.step),
                        l = r.$rating.width();
                    return n = r.diff * e / (l * r.step), n = r.rtl ? Math.floor(n) : Math.ceil(n), a = t.applyPrecision(parseFloat(r.min + n * r.step), i), a = Math.max(Math.min(a, r.max), r.min), r.rtl ? r.max - a : a
                },
                getWidthFromValue: function(e) {
                    var t, a, n = this,
                        r = n.min,
                        i = n.max,
                        l = n.$emptyStars;
                    return !e || r >= e || r === i ? 0 : (a = l.outerWidth(), t = a ? l.width() / a : 1, e >= i ? 100 : (e - r) * t * 100 / (i - r))
                },
                fetchCaption: function(e) {
                    var a, n, r, i, l, s = this,
                        o = parseFloat(e) || s.clearValue,
                        c = s.starCaptions,
                        u = s.starCaptionClasses;
                    return o && o !== s.clearValue && (o = t.applyPrecision(o, t.getDecimalPlaces(s.step))), i = "function" == typeof u ? u(o) : u[o], r = "function" == typeof c ? c(o) : c[o], n = t.isEmpty(r) ? s.defaultCaption.replace(/\{rating}/g, o) : r, a = t.isEmpty(i) ? s.clearCaptionClass : i, l = o === s.clearValue ? s.clearCaption : n, '<span class="' + a + '">' + l + "</span>"
                },
                destroy: function() {
                    var a = this,
                        n = a.$element;
                    return t.isEmpty(a.$container) || a.$container.before(n).remove(), e.removeData(n.get(0)), n.off("rating").removeClass("rating rating-input")
                },
                create: function(e) {
                    var t = this,
                        a = e || t.options || {};
                    return t.destroy().rating(a)
                },
                clear: function() {
                    var e = this,
                        t = '<span class="' + e.clearCaptionClass + '">' + e.clearCaption + "</span>";
                    return e.inactive || e._setCaption(t), e.showStars(e.clearValue).trigger("change").trigger("rating.clear")
                },
                reset: function() {
                    var e = this;
                    return e.showStars(e.initialValue).trigger("rating.reset")
                },
                update: function(e) {
                    var t = this;
                    return arguments.length ? t.showStars(e) : t.$element
                },
                refresh: function(t) {
                    var a = this,
                        n = a.$element;
                    return t ? a.destroy().rating(e.extend(!0, a.options, t)).trigger("rating.refresh") : n
                }
            }, e.fn.rating = function(n) {
                var r = Array.apply(null, arguments),
                    i = [];
                switch (r.shift(), this.each(function() {
                    var l, s = e(this),
                        o = s.data("rating"),
                        c = "object" == typeof n && n,
                        u = c.theme || s.data("theme"),
                        d = c.language || s.data("language") || "en",
                        p = {},
                        h = {};
                    o || (u && (p = e.fn.ratingThemes[u] || {}), "en" === d || t.isEmpty(e.fn.ratingLocales[d]) || (h = e.fn.ratingLocales[d]), l = e.extend(!0, {}, e.fn.rating.defaults, p, e.fn.ratingLocales.en, h, c, s.data()), o = new a(this, l), s.data("rating", o)), "string" == typeof n && i.push(o[n].apply(o, r))
                }), i.length) {
                    case 0:
                        return this;
                    case 1:
                        return void 0 === i[0] ? this : i[0];
                    default:
                        return i
                }
            }, e.fn.rating.defaults = {
                theme: "",
                language: "en",
                stars: 5,
                filledStar: '<i class="fas fa-star"></i>',
                emptyStar: '<i class="fas fa-star empty-star"></i>',
                //emptyStar: '<i class="far fa-star"></i>',
                containerClass: "",
                size: "xs",
                animate: !0,
                displayOnly: !1,
                rtl: !1,
                showClear: !0,
                showCaption: !0,
                starCaptionClasses: {
                    .5: "label label-danger",
                    1: "label label-danger",
                    1.5: "label label-warning",
                    2: "label label-warning",
                    2.5: "label label-info",
                    3: "label label-info",
                    3.5: "label label-primary",
                    4: "label label-primary",
                    4.5: "label label-success",
                    5: "label label-success"
                },
                clearButton: '<i class="fas fa-minus"></i>',
                clearButtonBaseClass: "clear-rating",
                clearButtonActiveClass: "clear-rating-active",
                clearCaptionClass: "label label-default",
                clearValue: null,
                captionElement: null,
                clearElement: null,
                hoverEnabled: !0,
                hoverChangeCaption: !0,
                hoverChangeStars: !0,
                hoverOnClear: !0,
                zeroAsNull: !0
            }, e.fn.ratingLocales.en = {
                defaultCaption: "{rating} Stars",
                starCaptions: {
                    .5: "Half Star",
                    1: "One Star",
                    1.5: "One & Half Star",
                    2: "Two Stars",
                    2.5: "Two & Half Stars",
                    3: "Three Stars",
                    3.5: "Three & Half Stars",
                    4: "Four Stars",
                    4.5: "Four & Half Stars",
                    5: "Five Stars"
                },
                clearButtonTitle: "Clear",
                clearCaption: "Not Rated"
            }, e.fn.rating.Constructor = a, e(document).ready(function() {
                var t = e("input.rating");
                t.length && t.removeClass("rating-loading").addClass("rating-loading").rating()
            })
        });
    </script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function(){
            $("#button-search").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                $("#list tr").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
    <script>
        // Initialize and add the map
        function initMap() {
            // The location of Uluru
            const uluru = { lat: -25.344, lng: 131.036 };
            // The map, centered at Uluru
            const map = new google.maps.Map(document.getElementById("map"), {
                zoom: 4,
                center: uluru,
            });
            // The marker, positioned at Uluru
            const marker = new google.maps.Marker({
                position: uluru,
                map: map,
            });
        }
    </script>

    <h3> Google Maps </h3>
    <!--The div element for the map -->
    <div id="map"></div>

    <!-- Async script executes immediately and must be after any DOM elements used in callback. -->
    <script
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDYvoaMLex2d1V-ZN7WOFVqGxfFOVyfI3M&callback=initMap&libraries=&v=weekly"
            async></script>
    </div>
    </body>
    </html>

    {{ include('@MercurySeriesFlashy/flashy.html.twig') }}
{% endblock %}